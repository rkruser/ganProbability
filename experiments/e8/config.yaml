name: runRegressorTest
modules: [LoadGAN, RegressorRun, Analyzer]
#One for everything in otherPaths
otherTemplates: {
  generated: template
}
dependencies: [[], [0], [0,1]]
args: [
  # Loader args
  {
  # Loader default options
  'dataset': 'mnist',
  'loadFromExperiment': 5, #samples.mat exists for experiment 5
  'batchSize': 64,
  'workers': 2,
  'imageSize': 28,
  # Model default options
  'ngpu': 1,
  'nz': 20,
  'ngf': 64,
  'ndf': 64,
  'nc': 1,
  'cuda': False,
  'netG':'',
  'netGexpNum': -1, #experiment number to load from
  'netGinstance': -1, #Epoch snapshot to load from
  'netD': '',
  'netDexpNum': -1, # experiment number to load from
  'netDinstance': -1, #epoch snapshot to load from
  'netP': '',
  'netPinstance': -1,
  'netPexpNum': -1,
  'lr': 0.0002,
  'beta1': 0.5,
#  'manualSeed':None
# 'proportions':(0.1*np.ones(10))
  },
  {
    'netP': 'netP',
    'netPinstance': -1,
    'netPexpNum': 7,
#    'startProportions':(0.1*np.ones(10)),
#    'endProportions':(0.1*np.ones(10)),
    'samples':10000,
    'sigma':25
  },
  {}
]
files: {
  submit: {'path': 'submit.sh',
         'parallelOpt': 'threadInvariant'},
  netG: {'path': 'models/netG.pth',
      'parallelOpt': 'threadInvariant',
      'pathOpt': 'experimentRelative',
      'folder': 'generated'},
  netD: {'path': 'models/netD.pth',
      'parallelOpt': 'threadInvariant',
      'pathOpt': 'experimentRelative',
      'folder': 'generated'},
  slurmOutFolder: 'logs/',
  samples: {'path': 'data/samples.mat',
            'parallelOpt': 'threadSpecific',
            'pathOpt': 'experimentRelative',
            'folder': 'generated'},
  netP: {'path': 'models/netP.pth',
      'parallelOpt': 'threadInvariant',
      'pathOpt': 'experimentRelative',
      'folder': 'generated'},
  lossCurve: 'analysis/lossCurve.png',
  errorCurve: 'analysis/errorCurve.png',
  regressorResults: { 'path': 'data/regressorShiftResults.mat',
                      'folder': 'generated'},
  domainShiftCurve: 'analysis/domainShiftTest.png'
}
formatArgs: {
  submit: [ 'name', 'NUMBER', 'file:slurmOutFolder' ]
}
